<?xml version="1.0" encoding="utf-8"?>
<assemblies timestamp="11/04/2017 17:26:37">
  <assembly name="Nanomsg2.Sharp.Tests.dll" environment="64-bit .NET Standard [collection-per-class, non-parallel]" test-framework="xUnit.net 2.3.1.3858" run-date="2017-11-04" run-time="17:26:34" total="32" passed="32" failed="0" skipped="0" time="2.309" errors="0">
    <errors />
    <collection total="5" passed="5" failed="0" skipped="0" name="Test collection for Nanomsg2.Sharp.Protocols.Pipeline.PipelineTests" time="0.417">
      <test name="Nanomsg2.Sharp.Protocols.Pipeline.PipelineTests.Load_balancing_works" type="Nanomsg2.Sharp.Protocols.Pipeline.PipelineTests" method="Load_balancing_works" time="0.3748598" result="Pass">
        <output><![CDATA[Running protocol tests for address family 'InProcess'.
Testing using address 'inproc://74ef3694-884f-410a-a092-c0ef98995d8f'.
]]></output>
      </test>
      <test name="Nanomsg2.Sharp.Protocols.Pipeline.PipelineTests.That_default_Push_Socket_correct" type="Nanomsg2.Sharp.Protocols.Pipeline.PipelineTests" method="That_default_Push_Socket_correct" time="0.0145878" result="Pass">
        <output><![CDATA[And given default Nanomsg2.Sharp.Protocols.Pipeline.LatestPushSocket socket.
  And does not support 'recv-fd'.
  And receiving 'Nanomsg2.Sharp.Messaging.Message' throws 'System.InvalidOperationException'.
  And receiving bytes throws 'System.InvalidOperationException'.
  And try receive 'System.Collections.Generic.ICollection<System.Byte>' throws 'System.InvalidOperationException'.
  And try receive 'Nanomsg2.Sharp.Messaging.Message' throws 'System.InvalidOperationException'.
]]></output>
      </test>
      <test name="Nanomsg2.Sharp.Protocols.Pipeline.PipelineTests.Push_can_send_Pull_can_receive" type="Nanomsg2.Sharp.Protocols.Pipeline.PipelineTests" method="Push_can_send_Pull_can_receive" time="0.0214105" result="Pass">
        <output><![CDATA[Running protocol tests for address family 'InProcess'.
Testing using address 'inproc://2ae23e1d-f39d-48f0-8ff0-0d3269fea2fd'.
]]></output>
      </test>
      <test name="Nanomsg2.Sharp.Protocols.Pipeline.PipelineTests.That_default_Pull_Socket_correct" type="Nanomsg2.Sharp.Protocols.Pipeline.PipelineTests" method="That_default_Pull_Socket_correct" time="0.0052833" result="Pass">
        <output><![CDATA[And given default Nanomsg2.Sharp.Protocols.Pipeline.LatestPullSocket socket.
  And does not support 'send-fd'.
  And send 'Nanomsg2.Sharp.Messaging.Message' throws 'System.InvalidOperationException'.
  And send 'System.String' throws 'System.InvalidOperationException'.
  And send 'System.Collections.Generic.IEnumerable<System.Byte>' throws 'System.InvalidOperationException'.
  And send 'System.Collections.Generic.IEnumerable<System.Byte>' with 'System.Int32' 'count' throws 'System.InvalidOperationException'.
  And send 'System.Collections.Generic.IEnumerable<System.Byte>' with 'System.Int64' 'count' throws 'System.InvalidOperationException'.
]]></output>
      </test>
      <test name="Nanomsg2.Sharp.Protocols.Pipeline.PipelineTests.That_default_Pull_Socket_can_close" type="Nanomsg2.Sharp.Protocols.Pipeline.PipelineTests" method="That_default_Pull_Socket_can_close" time="0.0009751" result="Pass">
        <output><![CDATA[And given default Nanomsg2.Sharp.Protocols.Pipeline.LatestPullSocket socket.
  And  'Nanomsg2.Sharp.Protocols.Pipeline.LatestPullSocket' can Close.
]]></output>
      </test>
    </collection>
    <collection total="6" passed="6" failed="0" skipped="0" name="Test collection for Nanomsg2.Sharp.Protocols.Reqrep.ReqRepTests" time="0.011">
      <test name="Nanomsg2.Sharp.Protocols.Reqrep.ReqRepTests.The_sockets_can_exchange_messages" type="Nanomsg2.Sharp.Protocols.Reqrep.ReqRepTests" method="The_sockets_can_exchange_messages" time="0.0043667" result="Pass">
        <output><![CDATA[Running protocol tests for address family 'InProcess'.
Testing using address 'inproc://773c24e2-cb62-4e1f-8e24-d384bdcbbf31'.
And given two fresh sockets.
  And we can create linked sockets.
    And the sockets can exchange messages.
]]></output>
      </test>
      <test name="Nanomsg2.Sharp.Protocols.Reqrep.ReqRepTests.Request_cancellation_works" type="Nanomsg2.Sharp.Protocols.Reqrep.ReqRepTests" method="Request_cancellation_works" time="0.0017201" result="Pass">
        <output><![CDATA[Running protocol tests for address family 'InProcess'.
Testing using address 'inproc://df7eaa27-6326-4d0e-ad52-4e5337247bc6'.
And given two fresh sockets.
  And request cancellation works.
]]></output>
      </test>
      <test name="Nanomsg2.Sharp.Protocols.Reqrep.ReqRepTests.That_Replier_cannot_set_Requestor_resend_time_option" type="Nanomsg2.Sharp.Protocols.Reqrep.ReqRepTests" method="That_Replier_cannot_set_Requestor_resend_time_option" time="0.0015588" result="Pass">
        <output><![CDATA[And given default Nanomsg2.Sharp.Protocols.Reqrep.LatestRepSocket socket.
  And cannot set Requestor resend time option.
]]></output>
      </test>
      <test name="Nanomsg2.Sharp.Protocols.Reqrep.ReqRepTests.That_Requestor_receive_without_send_fails" type="Nanomsg2.Sharp.Protocols.Reqrep.ReqRepTests" method="That_Requestor_receive_without_send_fails" time="0.0015131" result="Pass">
        <output><![CDATA[And given default Nanomsg2.Sharp.Protocols.Reqrep.LatestReqSocket socket.
  And receive without send fails.
]]></output>
      </test>
      <test name="Nanomsg2.Sharp.Protocols.Reqrep.ReqRepTests.That_Replier_send_without_receive_fails" type="Nanomsg2.Sharp.Protocols.Reqrep.ReqRepTests" method="That_Replier_send_without_receive_fails" time="0.0014199" result="Pass">
        <output><![CDATA[And given default Nanomsg2.Sharp.Protocols.Reqrep.LatestRepSocket socket.
  And send without receive fails.
]]></output>
      </test>
      <test name="Nanomsg2.Sharp.Protocols.Reqrep.ReqRepTests.That_Requestor_can_set_resend_time_option" type="Nanomsg2.Sharp.Protocols.Reqrep.ReqRepTests" method="That_Requestor_can_set_resend_time_option" time="0.0004521" result="Pass">
        <output><![CDATA[And given default Nanomsg2.Sharp.Protocols.Reqrep.LatestReqSocket socket.
  And can set resend time option.
]]></output>
      </test>
    </collection>
    <collection total="4" passed="4" failed="0" skipped="0" name="Test collection for Nanomsg2.Sharp.Protocols.PollingTests" time="0.420">
      <test name="Nanomsg2.Sharp.Protocols.PollingTests.When_we_write_they_are_pollable" type="Nanomsg2.Sharp.Protocols.PollingTests" method="When_we_write_they_are_pollable" time="0.1088717" result="Pass">
        <output><![CDATA[And Given a connected Pair of Sockets.
  And We can get a Recv FD.
    And when we write they are pollable.
]]></output>
      </test>
      <test name="Nanomsg2.Sharp.Protocols.PollingTests.And_is_always_the_same_FD" type="Nanomsg2.Sharp.Protocols.PollingTests" method="And_is_always_the_same_FD" time="0.1023906" result="Pass">
        <output><![CDATA[And Given a connected Pair of Sockets.
  And We can get a Recv FD.
    And is always the same FD.
]]></output>
      </test>
      <test name="Nanomsg2.Sharp.Protocols.PollingTests.And_they_start_non_pollable" type="Nanomsg2.Sharp.Protocols.PollingTests" method="And_they_start_non_pollable" time="0.1051489" result="Pass">
        <output><![CDATA[And Given a connected Pair of Sockets.
  And We can get a Recv FD.
    And they start non pollable.
]]></output>
      </test>
      <test name="Nanomsg2.Sharp.Protocols.PollingTests.We_can_get_a_Send_FD" type="Nanomsg2.Sharp.Protocols.PollingTests" method="We_can_get_a_Send_FD" time="0.1033612" result="Pass">
        <output><![CDATA[And Given a connected Pair of Sockets.
  And We can get a Send FD.
]]></output>
      </test>
    </collection>
    <collection total="7" passed="7" failed="0" skipped="0" name="Test collection for Nanomsg2.Sharp.Protocols.Pubsub.PubSubTests" time="0.310">
      <test name="Nanomsg2.Sharp.Protocols.Pubsub.PubSubTests.Subscribers_in_raw_receive" type="Nanomsg2.Sharp.Protocols.Pubsub.PubSubTests" method="Subscribers_in_raw_receive" time="0.0071095" result="Pass">
        <output><![CDATA[And can create linked sockets.
  Running protocol tests for address family 'InProcess'.
  Testing using address 'inproc://bf3cd71f-2dae-4ef8-879a-1f2bfc9675ad'.
  And Subscribers in raw receive.
]]></output>
      </test>
      <test name="Nanomsg2.Sharp.Protocols.Pubsub.PubSubTests.Invalid_topics_are_not_received_by_Subscriber" type="Nanomsg2.Sharp.Protocols.Pubsub.PubSubTests" method="Invalid_topics_are_not_received_by_Subscriber" time="0.2006057" result="Pass">
        <output><![CDATA[And can create linked sockets.
  Running protocol tests for address family 'InProcess'.
  Testing using address 'inproc://b92b7bd3-f672-408f-86ff-e35c076868be'.
  And Subscriber can receive from publisher.
    And Invalid topics are not received by Subscriber.
      And Topic: '/somewhere/over/the/rainbow'.
      And Topic: '/something/aint/quite/right'.
]]></output>
      </test>
      <test name="Nanomsg2.Sharp.Protocols.Pubsub.PubSubTests.That_default_Publisher_Socket_correct" type="Nanomsg2.Sharp.Protocols.Pubsub.PubSubTests" method="That_default_Publisher_Socket_correct" time="0.0058488" result="Pass">
        <output><![CDATA[And given default Nanomsg2.Sharp.Protocols.Pubsub.LatestPubSocket socket.
  And does not support 'recv-fd'.
  And receiving 'Nanomsg2.Sharp.Messaging.Message' throws 'System.InvalidOperationException'.
  And receiving bytes throws 'System.InvalidOperationException'.
  And try receive 'System.Collections.Generic.ICollection<System.Byte>' throws 'System.InvalidOperationException'.
  And try receive 'Nanomsg2.Sharp.Messaging.Message' throws 'System.InvalidOperationException'.
And given default Nanomsg2.Sharp.Protocols.Pubsub.LatestPubSocket socket.
  And Publisher cannot subscribe.
  And Publisher cannot unsubscribe.
]]></output>
      </test>
      <test name="Nanomsg2.Sharp.Protocols.Pubsub.PubSubTests.That_default_Subscriber_Socket_correct" type="Nanomsg2.Sharp.Protocols.Pubsub.PubSubTests" method="That_default_Subscriber_Socket_correct" time="0.0010979" result="Pass">
        <output><![CDATA[And given default Nanomsg2.Sharp.Protocols.Pubsub.LatestSubSocket socket.
  And does not support 'send-fd'.
  And send 'Nanomsg2.Sharp.Messaging.Message' throws 'System.InvalidOperationException'.
  And send 'System.String' throws 'System.InvalidOperationException'.
  And send 'System.Collections.Generic.IEnumerable<System.Byte>' throws 'System.InvalidOperationException'.
  And send 'System.Collections.Generic.IEnumerable<System.Byte>' with 'System.Int32' 'count' throws 'System.InvalidOperationException'.
  And send 'System.Collections.Generic.IEnumerable<System.Byte>' with 'System.Int64' 'count' throws 'System.InvalidOperationException'.
]]></output>
      </test>
      <test name="Nanomsg2.Sharp.Protocols.Pubsub.PubSubTests.Subscribers_without_subscriptions_do_not_receive" type="Nanomsg2.Sharp.Protocols.Pubsub.PubSubTests" method="Subscribers_without_subscriptions_do_not_receive" time="0.0920537" result="Pass">
        <output><![CDATA[And can create linked sockets.
  Running protocol tests for address family 'InProcess'.
  Testing using address 'inproc://0373cf05-cdbc-4d10-b31b-282c3171d87a'.
  And Subscribers without subscriptions do not receive.
]]></output>
      </test>
      <test name="Nanomsg2.Sharp.Protocols.Pubsub.PubSubTests.Valid_topics_are_received_by_Subscriber" type="Nanomsg2.Sharp.Protocols.Pubsub.PubSubTests" method="Valid_topics_are_received_by_Subscriber" time="0.0016228" result="Pass">
        <output><![CDATA[And can create linked sockets.
  Running protocol tests for address family 'InProcess'.
  Testing using address 'inproc://b4480ed3-ad1a-473c-b7be-445826f2ab05'.
  And Subscriber can receive from publisher.
    And Valid topics are received by Subscriber.
      And Topic: '/some/like/it/hot'.
      And Topic: '/some/day/some/how'.
]]></output>
      </test>
      <test name="Nanomsg2.Sharp.Protocols.Pubsub.PubSubTests.Unsubscribe_works" type="Nanomsg2.Sharp.Protocols.Pubsub.PubSubTests" method="Unsubscribe_works" time="0.0016285" result="Pass">
        <output><![CDATA[And can create linked sockets.
  Running protocol tests for address family 'InProcess'.
  Testing using address 'inproc://002abc88-3d50-4371-9a9e-5ba6e78e1e31'.
  And Subscriber can subscribe.
    And Unsubscribe works.
]]></output>
      </test>
    </collection>
    <collection total="4" passed="4" failed="0" skipped="0" name="Test collection for Nanomsg2.Sharp.Protocols.Survey.SurveyTests" time="0.125">
      <test name="Nanomsg2.Sharp.Protocols.Survey.SurveyTests.Respondent_send_with_no_Surveyor_fails" type="Nanomsg2.Sharp.Protocols.Survey.SurveyTests" method="Respondent_send_with_no_Surveyor_fails" time="0.0028331" result="Pass">
        <output><![CDATA[And given default Nanomsg2.Sharp.Protocols.Survey.LatestRespondentSocket socket.
  And send with no surveyor fails.
]]></output>
      </test>
      <test name="Nanomsg2.Sharp.Protocols.Survey.SurveyTests.Surveyor_with_no_Respondent_times_out" type="Nanomsg2.Sharp.Protocols.Survey.SurveyTests" method="Surveyor_with_no_Respondent_times_out" time="0.0558902" result="Pass">
        <output><![CDATA[And given default Nanomsg2.Sharp.Protocols.Survey.LatestSurveyorSocket socket.
  And survey with no respondent times out.
]]></output>
      </test>
      <test name="Nanomsg2.Sharp.Protocols.Survey.SurveyTests.Survey_works" type="Nanomsg2.Sharp.Protocols.Survey.SurveyTests" method="Survey_works" time="0.0631653" result="Pass">
        <output><![CDATA[Running protocol tests for address family 'InProcess'.
Testing using address 'inproc://3968f072-52c4-4571-8cfe-f4429f3ea277'.
And We can create linked Sockets.
  And survey works.
    And Surveyor times out receiving again.
      And Surveyor goes to non survey state.
]]></output>
      </test>
      <test name="Nanomsg2.Sharp.Protocols.Survey.SurveyTests.Surveyor_receive_with_no_Respondent_fails" type="Nanomsg2.Sharp.Protocols.Survey.SurveyTests" method="Surveyor_receive_with_no_Respondent_fails" time="0.003074" result="Pass">
        <output><![CDATA[And given default Nanomsg2.Sharp.Protocols.Survey.LatestSurveyorSocket socket.
  And receive with no respondent fails.
]]></output>
      </test>
    </collection>
    <collection total="3" passed="3" failed="0" skipped="0" name="Test collection for Nanomsg2.Sharp.Protocols.Bus.IPv4BusTests" time="0.454">
      <test name="Nanomsg2.Sharp.Protocols.Bus.IPv4BusTests.That_Bus1_delivers_message_to_both_Bus2_and_Bus3" type="Nanomsg2.Sharp.Protocols.Bus.IPv4BusTests" method="That_Bus1_delivers_message_to_both_Bus2_and_Bus3" time="0.2072203" result="Pass">
        <output><![CDATA[Running protocol tests for address family 'IPv4'.
Testing using address 'tcp://127.0.0.1:10000'.
Given three Nanomsg2.Sharp.Protocols.Bus.LatestBusSocket instances.
  And messages can be delivered.
    And receive times out.
      And Bus1 delivers message to both Bus2 and Bus3.
]]></output>
      </test>
      <test name="Nanomsg2.Sharp.Protocols.Bus.IPv4BusTests.That_Bus2_delivers_message_to_Bus1_and_Bus3_times_out" type="Nanomsg2.Sharp.Protocols.Bus.IPv4BusTests" method="That_Bus2_delivers_message_to_Bus1_and_Bus3_times_out" time="0.2438026" result="Pass">
        <output><![CDATA[Running protocol tests for address family 'IPv4'.
Testing using address 'tcp://127.0.0.1:10001'.
Given three Nanomsg2.Sharp.Protocols.Bus.LatestBusSocket instances.
  And messages can be delivered.
    And receive times out.
      And Bus2 delivers message to Bus1, Bus3 times out.
]]></output>
      </test>
      <test name="Nanomsg2.Sharp.Protocols.Bus.IPv4BusTests.That_default_socket_correct" type="Nanomsg2.Sharp.Protocols.Bus.IPv4BusTests" method="That_default_socket_correct" time="0.0031886" result="Pass">
        <output><![CDATA[And given default Nanomsg2.Sharp.Protocols.Bus.LatestBusSocket socket.
]]></output>
      </test>
    </collection>
    <collection total="3" passed="3" failed="0" skipped="0" name="Test collection for Nanomsg2.Sharp.Protocols.Bus.BusTests" time="0.429">
      <test name="Nanomsg2.Sharp.Protocols.Bus.BusTests.That_Bus1_delivers_message_to_both_Bus2_and_Bus3" type="Nanomsg2.Sharp.Protocols.Bus.BusTests" method="That_Bus1_delivers_message_to_both_Bus2_and_Bus3" time="0.1815815" result="Pass">
        <output><![CDATA[Running protocol tests for address family 'InProcess'.
Testing using address 'inproc://7025a4ad-b7b1-4328-aa52-0b722cabf31d'.
Given three Nanomsg2.Sharp.Protocols.Bus.LatestBusSocket instances.
  And messages can be delivered.
    And receive times out.
      And Bus1 delivers message to both Bus2 and Bus3.
]]></output>
      </test>
      <test name="Nanomsg2.Sharp.Protocols.Bus.BusTests.That_Bus2_delivers_message_to_Bus1_and_Bus3_times_out" type="Nanomsg2.Sharp.Protocols.Bus.BusTests" method="That_Bus2_delivers_message_to_Bus1_and_Bus3_times_out" time="0.2472217" result="Pass">
        <output><![CDATA[Running protocol tests for address family 'InProcess'.
Testing using address 'inproc://3fabc309-ae73-4867-b19f-6234b0bfbfc1'.
Given three Nanomsg2.Sharp.Protocols.Bus.LatestBusSocket instances.
  And messages can be delivered.
    And receive times out.
      And Bus2 delivers message to Bus1, Bus3 times out.
]]></output>
      </test>
      <test name="Nanomsg2.Sharp.Protocols.Bus.BusTests.That_default_socket_correct" type="Nanomsg2.Sharp.Protocols.Bus.BusTests" method="That_default_socket_correct" time="0.0002066" result="Pass">
        <output><![CDATA[And given default Nanomsg2.Sharp.Protocols.Bus.LatestBusSocket socket.
]]></output>
      </test>
    </collection>
  </assembly>
</assemblies>